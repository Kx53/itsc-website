---
export const prerender = false;

import BlogPostLayout from "@/layouts/BlogPostLayout.astro";
import { marked } from "marked";
import fetchApi from "@/lib/strapi";
import {
  transformPostToFrontmatter,
  renderContentBlocks,
  STRAPI_POST_POPULATE,
} from "@/utils/strapiHelpers";
import type { PopulatedPost } from "@/types/strapi";

// Get documentId from URL parameters
const { documentId } = Astro.params;

if (!documentId) {
  return new Response("Document ID parameter is required", { status: 400 });
}

// Get Strapi base URL
const STRAPI_URL = import.meta.env.STRAPI_URL || "http://localhost:1337";

// Fetch post by documentId
let post: PopulatedPost | null = null;

try {
  const rawPost = (await fetchApi({
    endpoint: `posts/${documentId}`,
    query: {
      ...STRAPI_POST_POPULATE,
      publicationState: "preview",
    },
    unwrapData: true,
  })) as any;

  // Convert Strapi 5 direct API response to expected structure
  post = {
    id: rawPost.id,
    documentId: rawPost.documentId,
    attributes: rawPost,
  } as PopulatedPost;
} catch (error) {
  console.error("Error fetching post:", error);
  return new Response(`Error fetching post: ${error.message}`, { status: 500 });
}

// Validate post data
if (!post?.attributes?.title) {
  return new Response(`Post not found: ${documentId}`, { status: 404 });
}

// Transform and render content
const frontmatter = transformPostToFrontmatter(post, STRAPI_URL);
const mainContent = post.attributes.body || "";
const blocksHtml = await renderContentBlocks(
  post.attributes.contentBlocks,
  STRAPI_URL
);
---

<BlogPostLayout {frontmatter}>
  {
    mainContent && (
      <div
        class="prose sm:prose-lg max-w-none prose-p:text-base-content/90 prose-headings:text-base-content prose-a:text-primary hover:prose-a:text-primary-focus prose-code:bg-neutral prose-code:text-neutral-content prose-code:p-1 prose-code:rounded-md prose-pre:bg-neutral prose-pre:text-neutral-content"
        set:html={marked.parse(mainContent)}
      />
    )
  }

  {
    blocksHtml && (
      <div
        class="prose sm:prose-lg max-w-none prose-p:text-base-content/90 prose-headings:text-base-content prose-a:text-primary hover:prose-a:text-primary-focus prose-code:bg-neutral prose-code:text-neutral-content prose-code:p-1 prose-code:rounded-md prose-pre:bg-neutral prose-pre:text-neutral-content"
        set:html={blocksHtml}
      />
    )
  }
</BlogPostLayout>
