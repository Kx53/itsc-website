---
interface Props {
  events?: Array<{
    year: string;
    title: string;
    description?: string;
  }>;
}

const { events = [] } = Astro.props;

const timelineEvents = events;
---

<ul
  class="timeline timeline-snap-icon max-md:timeline-compact timeline-vertical mt-8 md:mt-10 lg:mt-12"
>
  {
    timelineEvents.length > 0 &&
      timelineEvents.map((event, index) => (
        <li>
          {index > 0 && <hr />}
          <div class="timeline-middle">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              viewBox="0 0 20 20"
              fill="currentColor"
              class="h-5 w-5"
            >
              <path
                fill-rule="evenodd"
                d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"
                clip-rule="evenodd"
              />
            </svg>
          </div>
          <div
            class={`${index % 2 === 0 ? "timeline-start" : "timeline-end"} mb-10 ${index % 2 === 0 ? "md:text-end" : ""}`}
          >
            <time class="font-mono italic">{event.year}</time>
            <div class="text-lg font-black">{event.title}</div>
            {event.description && <p>{event.description}</p>}
          </div>
          {index < timelineEvents.length - 1 && <hr />}
        </li>
      ))
  }
</ul>
